"use strict";(self.webpackChunkwiki_42_mwx=self.webpackChunkwiki_42_mwx||[]).push([[6220],{3536:(e,a,r)=>{r.r(a),r.d(a,{assets:()=>l,contentTitle:()=>t,default:()=>m,frontMatter:()=>n,metadata:()=>s,toc:()=>c});var o=r(4848),i=r(8453);const n={sidebar_position:2},t="Makefile do Minitalk \ud83d\udee0\ufe0f",s={id:"rank 02/Minitalk/makefile",title:"Makefile do Minitalk \ud83d\udee0\ufe0f",description:"Este \xe9 o Makefile usado no projeto minitalk, respons\xe1vel por compilar os arquivos server.c, client.c e a libft, al\xe9m de gerar uma biblioteca minitalk.a.",source:"@site/docs/rank 02/Minitalk/makefile.mdx",sourceDirName:"rank 02/Minitalk",slug:"/rank 02/Minitalk/makefile",permalink:"/wiki_ft/docs/rank 02/Minitalk/makefile",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rank 02/Minitalk/makefile.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Minitalk \ud83e\udde0\ud83d\udcac",permalink:"/wiki_ft/docs/rank 02/Minitalk/intro"},next:{title:"Como funciona server.c",permalink:"/wiki_ft/docs/rank 02/Minitalk/server"}},l={},c=[{value:"Makefile",id:"makefile",level:2}];function d(e){const a={code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(a.header,{children:(0,o.jsx)(a.h1,{id:"makefile-do-minitalk-\ufe0f",children:"Makefile do Minitalk \ud83d\udee0\ufe0f"})}),"\n",(0,o.jsxs)(a.p,{children:["Este \xe9 o ",(0,o.jsx)(a.code,{children:"Makefile"})," usado no projeto ",(0,o.jsx)(a.strong,{children:"minitalk"}),", respons\xe1vel por compilar os arquivos ",(0,o.jsx)(a.code,{children:"server.c"}),", ",(0,o.jsx)(a.code,{children:"client.c"})," e a ",(0,o.jsx)(a.code,{children:"libft"}),", al\xe9m de gerar uma biblioteca ",(0,o.jsx)(a.code,{children:"minitalk.a"}),"."]}),"\n",(0,o.jsx)(a.hr,{}),"\n",(0,o.jsx)(a.h2,{id:"makefile",children:"Makefile"}),"\n",(0,o.jsx)(a.pre,{children:(0,o.jsx)(a.code,{className:"language-javascript",children:"NAME = minitalk.a  // Define o nome da biblioteca que ser\xe1 criada com os objetos (.o) do projeto.\r\n\r\nLIBFT_PATH= libft/\r\nLIBFT_A = $(LIBFT_PATH)/libft.a //Define o caminho da libft (LIBFT_PATH) e a localiza\xe7\xe3o da biblioteca libft.a dentro desse caminho.\r\n\r\nSRC = client.c server.c\r\nOBJ = $(SRC:.c=.o) //Lista os arquivos .c do projeto (client.c e server.c), e cria uma nova lista substituindo .c por .o, que s\xe3o os arquivos objeto.\r\n\r\nFLAG = -Wall -Wextra -Werror //Define as flags do compilador\r\n\r\nRM = rm -rf //Atalho para o comando de remo\xe7\xe3o, usado para limpar arquivos.\r\n\r\nall: $(NAME) server client //Regra padr\xe3o: chama a cria\xe7\xe3o da biblioteca (minitalk.a) e tamb\xe9m compila os execut\xe1veis server e client.\r\n\r\n$(NAME): $(OBJ) $(LIBFT_A) //Gera a biblioteca minitalk.a usando os arquivos objeto.\r\n        ar -rc $(NAME) $(OBJ) //ar -rc cria ou atualiza a biblioteca com os arquivos .o.\r\n\r\nserver: server.o $(LIBFT_A)\r\n        $(CC) $(FLAG) -o server server.o $(LIBFT_A) //Compila o server com os objetos necess\xe1rios e a libft.\r\n\r\nclient: client.o $(LIBFT_A)\r\n        $(CC) $(FLAG) -o client client.o $(LIBFT_A) //Compila o client da mesma forma.\r\n\r\n.c.o:\r\n        $(CC) $(CFLAGS) -c $< -o $(<:.c=.o) //Compila qualquer arquivo .c em .o.  $< \xe9 o nome do arquivo de entrada. $(<:.c=.o) troca a extens\xe3o para .o.\r\n\r\n$(LIBFT_A):\r\n        make -C libft //Entra no diret\xf3rio da libft e executa o make para compilar a biblioteca.\r\n\r\nclean:\r\n        rm -f $(OBJ)\r\n        make -C libft clean\r\n        $(RM) $(OBJ) //Remove todos os arquivos objeto do projeto e da libft.\r\n\r\nfclean: clean\r\n        make -C libft fclean\r\n        $(RM) $(NAME) server client //Essa regra faz uma limpeza completa no projeto depois executa make fclean dentro do diret\xf3rio da libft para limpar os arquivos da biblioteca.\r\n\r\nre: fclean all //A regra re limpa tudo com fclean e recompila com all.\r\n\r\n.PHONY: all clean fclean re //Define que essas regras n\xe3o s\xe3o arquivos, mesmo que exista um arquivo chamado all, clean, etc. Isso garante que o make execute as regras mesmo se arquivos com esses nomes existirem.\r\n\n"})}),"\n",(0,o.jsx)(a.p,{children:"Lembre-se de colocar tudo na norma =)"})]})}function m(e={}){const{wrapper:a}={...(0,i.R)(),...e.components};return a?(0,o.jsx)(a,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,a,r)=>{r.d(a,{R:()=>t,x:()=>s});var o=r(6540);const i={},n=o.createContext(i);function t(e){const a=o.useContext(n);return o.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function s(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),o.createElement(n.Provider,{value:a},e.children)}}}]);