"use strict";(self.webpackChunkwiki_42_mwx=self.webpackChunkwiki_42_mwx||[]).push([[9055],{1230:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>p,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var a=t(4848),i=t(8453);const s={sidebar_position:2},r="push_swap \ud83e\udde0\ud83d\udce6",o={id:"rank 02/PushSwap/push_swap",title:"push_swap \ud83e\udde0\ud83d\udce6",description:"\u2728 Introdu\xe7\xe3o ao Radix Sort",source:"@site/docs/rank 02/PushSwap/push_swap.mdx",sourceDirName:"rank 02/PushSwap",slug:"/rank 02/PushSwap/push_swap",permalink:"/wiki_ft/docs/rank 02/PushSwap/push_swap",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rank 02/PushSwap/push_swap.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Push Swap \ud83d\udcca\ud83d\udd03",permalink:"/wiki_ft/docs/rank 02/PushSwap/intro"},next:{title:"Verificacao de argumentos \ud83e\udde0",permalink:"/wiki_ft/docs/rank 02/PushSwap/verify_arguments"}},d={},c=[{value:"\u2728 Introdu\xe7\xe3o ao Radix Sort",id:"-introdu\xe7\xe3o-ao-radix-sort",level:2},{value:"\ud83d\uddc2\ufe0f O que faz o arquivo <code>push_swap.c</code>?",id:"\ufe0f-o-que-faz-o-arquivo-push_swapc",level:2},{value:"\ud83e\uddfe C\xf3digo completo: <code>push_swap.c</code>",id:"-c\xf3digo-completo-push_swapc",level:2},{value:"\ud83e\udde0 Explica\xe7\xe3o Detalhada",id:"-explica\xe7\xe3o-detalhada",level:2},{value:"\ud83e\udde9 get_min_index",id:"-get_min_index",level:3},{value:"\ud83d\udd22 sort_four e sort_five",id:"-sort_four-e-sort_five",level:3},{value:"\u2705 is_sorted",id:"-is_sorted",level:3},{value:"\ud83e\uddf1 main",id:"-main",level:3}];function l(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"push_swap-",children:"push_swap \ud83e\udde0\ud83d\udce6"})}),"\n",(0,a.jsx)(n.h2,{id:"-introdu\xe7\xe3o-ao-radix-sort",children:"\u2728 Introdu\xe7\xe3o ao Radix Sort"}),"\n",(0,a.jsxs)(n.p,{children:["O ",(0,a.jsx)(n.strong,{children:"Radix Sort"})," \xe9 um algoritmo de ordena\xe7\xe3o n\xe3o comparativo que organiza os n\xfameros a partir dos seus d\xedgitos, da menor casa (menos significativa) at\xe9 a maior. No contexto do ",(0,a.jsx)(n.code,{children:"push_swap"}),", ele \xe9 usado para ordenar eficientemente pilhas grandes, minimizando o n\xfamero de opera\xe7\xf5es. O algoritmo \xe9 ideal para este projeto, pois oferece uma complexidade de tempo linear em muitos casos pr\xe1ticos \u2014 ",(0,a.jsx)(n.code,{children:"O(n * k)"})," onde ",(0,a.jsx)(n.code,{children:"n"})," \xe9 o n\xfamero de elementos e ",(0,a.jsx)(n.code,{children:"k"})," o n\xfamero de d\xedgitos no maior n\xfamero."]}),"\n",(0,a.jsxs)(n.h2,{id:"\ufe0f-o-que-faz-o-arquivo-push_swapc",children:["\ud83d\uddc2\ufe0f O que faz o arquivo ",(0,a.jsx)(n.code,{children:"push_swap.c"}),"?"]}),"\n",(0,a.jsxs)(n.p,{children:["O arquivo ",(0,a.jsx)(n.code,{children:"push_swap.c"})," \xe9 o ponto de entrada da aplica\xe7\xe3o. Ele \xe9 respons\xe1vel por:"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Validar os argumentos passados na linha de comando."}),"\n",(0,a.jsxs)(n.li,{children:["Criar as pilhas ",(0,a.jsx)(n.code,{children:"a"})," e ",(0,a.jsx)(n.code,{children:"b"}),"."]}),"\n",(0,a.jsx)(n.li,{children:"Iniciar o processo de ordena\xe7\xe3o com base no tamanho da pilha."}),"\n",(0,a.jsxs)(n.li,{children:["Selecionar o algoritmo de ordena\xe7\xe3o apropriado (",(0,a.jsx)(n.code,{children:"sort_three"}),", ",(0,a.jsx)(n.code,{children:"sort_four"}),", ",(0,a.jsx)(n.code,{children:"sort_five"}),", ou ",(0,a.jsx)(n.code,{children:"radix_sort"}),")."]}),"\n",(0,a.jsx)(n.li,{children:"Gerenciar a libera\xe7\xe3o de mem\xf3ria."}),"\n"]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsxs)(n.h2,{id:"-c\xf3digo-completo-push_swapc",children:["\ud83e\uddfe C\xf3digo completo: ",(0,a.jsx)(n.code,{children:"push_swap.c"})]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-c",children:'static int\tget_min_index(t_node *stack)\n{\n\tint\tindex;\n\tint\ti;\n\tint\tmin;\n\n\tmin = stack->value;\n\ti = 0;\n\tindex = 0;\n\twhile (stack)\n\t{\n\t\tif (stack->value < min)\n\t\t{\n\t\t\tmin = stack->value;\n\t\t\tindex = i;\n\t\t}\n\t\tstack = stack->next;\n\t\ti++;\n\t}\n\treturn (index);\n}\n\nstatic void\tsort_four(t_node **a, t_node **b)\n{\n\tint min_index;\n\n\tmin_index = get_min_index(*a);\n\twhile (min_index > 0)\n\t{\n\t\tif (min_index <= 2)\n\t\t\tra(a);\n\t\telse\n\t\t\trra(a);\n\t\tmin_index = get_min_index(*a);\n\t}\n\tpb(a, b);\n\tsort_three(a);\n\tpa(a, b);\n}\n\nstatic void\tsort_five(t_node **a, t_node **b)\n{\n\tint min_index;\n\n\twhile (stack_size(*a) > 3)\n\t{\n\t\tmin_index = get_min_index(*a);\n\t\twhile (min_index > 0)\n\t\t{\n\t\t\tif (min_index <= stack_size(*a) / 2)\n\t\t\t\tra(a);\n\t\t\telse\n\t\t\t\trra(a);\n\t\t\tmin_index = get_min_index(*a);\n\t\t}\n\t\tpb(a, b);\n\t}\n\tsort_three(a);\n\twhile (*b)\n\t\tpa(a, b);\n}\n\nstatic int is_sorted(t_node *stack)\n{\n    while (stack && stack->next)\n    {\n        if (stack->value > stack->next->value)\n            return (0);\n        stack = stack->next;\n    }\n    return (1);\n}\n\nstatic void do_sort(t_node **a, t_node **b)\n{\n\tif (!is_sorted(*a))\n\t{\n\t\tif (stack_size(*a) == 2 && (*a)->value > (*a)->next->value)\n\t\t\tsa(a);\n\t\telse if (stack_size(*a) == 3)\n\t\t\tsort_three(a);\n\t\telse if (stack_size(*a) == 4)\n\t\t\tsort_four(a, b);\n\t\telse if (stack_size(*a) == 5)\n\t\t\tsort_five(a, b);\n\t\telse\n\t\t{\n\t\t\tassign_indexes(*a);\n\t\t\tradix_sort(a, b);\n\t\t}\n\t}\n\tfree_stack(a);\n\tfree_stack(b);\n}\n\nint\tmain(int argc, char **argv)\n{\n\tt_node\t\t*a = NULL;\n\tt_node\t\t*b = NULL;\n\tlong long\t*numbers_list;\n\tint\t\t\tcount;\n\tint\t\t\ti;\n\n\tcount = 0;\n\ti = -1;\n\tif (argc < 2)\n\t{\n\t\twrite(2, "Error\\n", 6);\n\t\treturn (0);\n\t}\n\tnumbers_list = verify_arguments(argc, argv, &count);\n\tif (!numbers_list)\n\t{\n\t\twrite(2, "Error\\n", 6);\n\t\treturn (0);\n\t}\n\twhile (++i < count)\n\t\tft_add_last(&a, (int)numbers_list[i]);\n\tdo_sort(&a, &b);\n\tfree(numbers_list);\n\treturn (0);\n}\n'})}),"\n",(0,a.jsx)(n.h2,{id:"-explica\xe7\xe3o-detalhada",children:"\ud83e\udde0 Explica\xe7\xe3o Detalhada"}),"\n",(0,a.jsx)(n.h3,{id:"-get_min_index",children:"\ud83e\udde9 get_min_index"}),"\n",(0,a.jsx)(n.p,{children:"Essa fun\xe7\xe3o percorre a pilha e retorna o \xedndice do menor valor. \xc9 \xfatil para saber qual elemento deve ser movido primeiro em ordena\xe7\xf5es pequenas."}),"\n",(0,a.jsx)(n.h3,{id:"-sort_four-e-sort_five",children:"\ud83d\udd22 sort_four e sort_five"}),"\n",(0,a.jsx)(n.p,{children:"Fun\xe7\xf5es espec\xedficas para ordenar 4 e 5 elementos. A l\xf3gica \xe9:"}),"\n",(0,a.jsx)(n.p,{children:"Encontrar o menor elemento e mov\xea-lo para a pilha b."}),"\n",(0,a.jsx)(n.p,{children:"Ordenar os elementos restantes com sort_three."}),"\n",(0,a.jsx)(n.p,{children:"Trazer o menor de volta para a."}),"\n",(0,a.jsx)(n.h3,{id:"-is_sorted",children:"\u2705 is_sorted"}),"\n",(0,a.jsx)(n.p,{children:"Verifica se a pilha j\xe1 est\xe1 ordenada em ordem crescente. Se sim, evita realizar opera\xe7\xf5es desnecess\xe1rias.\n\ud83e\uddee do_sort"}),"\n",(0,a.jsx)(n.p,{children:"Seleciona qual algoritmo aplicar com base na quantidade de elementos:"}),"\n",(0,a.jsx)(n.p,{children:"2 elementos: swap direto com sa."}),"\n",(0,a.jsx)(n.p,{children:"3 a 5 elementos: ordena\xe7\xf5es espec\xedficas com l\xf3gica baseada em ra, rra, pb, pa."}),"\n",(0,a.jsx)(n.p,{children:"Mais de 5 elementos: converte os valores em \xedndices e aplica o Radix Sort."}),"\n",(0,a.jsx)(n.p,{children:"Al\xe9m disso, garante libera\xe7\xe3o da mem\xf3ria ap\xf3s a ordena\xe7\xe3o."}),"\n",(0,a.jsx)(n.h3,{id:"-main",children:"\ud83e\uddf1 main"}),"\n",(0,a.jsx)(n.p,{children:"Verifica se h\xe1 argumentos suficientes."}),"\n",(0,a.jsx)(n.p,{children:"Valida e converte os argumentos para inteiros."}),"\n",(0,a.jsx)(n.p,{children:"Cria a pilha a."}),"\n",(0,a.jsx)(n.p,{children:"Chama do_sort para iniciar a ordena\xe7\xe3o."}),"\n",(0,a.jsx)(n.p,{children:"Libera os recursos usados."})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>o});var a=t(6540);const i={},s=a.createContext(i);function r(e){const n=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),a.createElement(s.Provider,{value:n},e.children)}}}]);