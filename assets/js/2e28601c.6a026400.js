"use strict";(self.webpackChunkwiki_42_mwx=self.webpackChunkwiki_42_mwx||[]).push([[1988],{3057:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>o,toc:()=>c});var a=n(4848),i=n(8453);const r={},l="Read File",o={id:"rank 02/FdF/guia_fdf_pronta/src/map/read_file",title:"Read File",description:"Arquivo especifico para leitura e parse do mapa",source:"@site/docs/rank 02/FdF/guia_fdf_pronta/src/map/read_file.mdx",sourceDirName:"rank 02/FdF/guia_fdf_pronta/src/map",slug:"/rank 02/FdF/guia_fdf_pronta/src/map/read_file",permalink:"/wiki_ft/docs/rank 02/FdF/guia_fdf_pronta/src/map/read_file",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rank 02/FdF/guia_fdf_pronta/src/map/read_file.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Map files",permalink:"/wiki_ft/docs/category/map-files"},next:{title:"Hooks",permalink:"/wiki_ft/docs/category/hooks"}},d={},c=[{value:"Read_file",id:"read_file",level:3},{value:"Init get resources from file",id:"init-get-resources-from-file",level:3},{value:"Fill matrix",id:"fill-matrix",level:3},{value:"Fill value and color",id:"fill-value-and-color",level:3}];function s(e){const t={code:"code",h1:"h1",h3:"h3",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"read-file",children:"Read File"})}),"\n",(0,a.jsx)(t.p,{children:"Arquivo especifico para leitura e parse do mapa"}),"\n",(0,a.jsx)(t.h3,{id:"read_file",children:"Read_file"}),"\n",(0,a.jsx)(t.p,{children:"Funcao que pega as informacoes do mapa e popula a matrix por aloca\xe7\xe3o contigua"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-c",metastring:"read_file.c",children:"int\tread_file(char *file_name, t_fdf *data)\n{\n\tint fd;\n\tchar *line;\n\tint i;\n\n\ti = -1;\n\tif (!init_get_resources_from_file(data, file_name))\n\t\treturn (0);\n\tdata->z_matrix = (t_point *)malloc(sizeof(t_point) * data->height * data->width); \t// Aloca\xe7\xe3o cont\xedgua\n\tif (!data->z_matrix)\n\t\treturn (0);\n\tfd = open(file_name, O_RDONLY);\n\tif (fd < 0)\n\t{\n\t\tfree(data->z_matrix);\n\t\treturn (0);\n\t}\n\twhile (++i < data->height)\n\t{\n\t\tline = get_next_line(fd);\n\t\tif (line == NULL)\n\t\t\tbreak;\n\t\tfill_matrix(&data->z_matrix[i * data->width], line, data->width);\n\t}\n\tclose(fd);\n\treturn (1);\n}\n"})}),"\n",(0,a.jsx)(t.h3,{id:"init-get-resources-from-file",children:"Init get resources from file"}),"\n",(0,a.jsx)(t.p,{children:"Funcao que atribui a altura e largura e verifica se deu certo a atribuicao (funcao para linhas)"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-c",metastring:"init_get_resources_from_file",children:"static int\tinit_get_resources_from_file(t_fdf *data, char *file_name)\n{\n\tdata->height = get_height(file_name);\n\tdata->width = get_width(file_name);\n\tif (data->width <= 0 || data->height <= 0)\n\t\treturn (0);\n\treturn (1);\n}\n"})}),"\n",(0,a.jsx)(t.h3,{id:"fill-matrix",children:"Fill matrix"}),"\n",(0,a.jsx)(t.p,{children:"Separa as coisas e depois da o fill abaixo"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-c",children:"static void\tfill_matrix(t_point *z_line, char *line, int width)\n{\n\tchar\t\t**nums;\n\tint\ti;\n\n\ti = 0;\n\tnums = ft_split(line, ' ');\n\tif (!nums)\n\t{\n\t\tfree(nums);\n\t\treturn ;\n\t}\n\twhile (nums[i] && i < width)\n\t{\n\t\tif (!fill_value_and_color(nums[i], &z_line[i]))\n\t\t{\n\t\t\tfree(nums[i]);\n\t\t\ti++;\n\t\t\tcontinue ;\n\t\t}\n\t\tfree(nums[i]);\n\t\ti++;\n\t}\n\tfree(nums);\n\tfree(line);\n}\n"})}),"\n",(0,a.jsx)(t.h3,{id:"fill-value-and-color",children:"Fill value and color"}),"\n",(0,a.jsx)(t.p,{children:"extrai tanto o valor num\xe9rico (para a coordenada Z) quanto a cor (para a representa\xe7\xe3o visual de um ponto em um gr\xe1fico)."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-c",metastring:"fill_value_and_color",children:"static int\tfill_value_and_color(char *num_str, t_point *z_line)\n{\n\tchar\t**value_and_color;\n\n\tvalue_and_color = ft_split(num_str, ','); // Separa valor e cor\n\tif (!value_and_color)\n\t\treturn (0);\n\tz_line->value = ft_atoi(value_and_color[0]); // Primeiro elemento \xe9 o valor Z\n\tif (value_and_color[1]) // Verifica se h\xe1 cor definida\n\t\tz_line->hex = ft_strdup(value_and_color[1]); // Duplica a cor para o hex\n\telse\n\t\tz_line->hex = ft_strdup(\"0xFFFFFF\"); // Cor padr\xe3o (branco)\n\tfree(value_and_color[0]);\n\tif (value_and_color[1])\n\t\tfree(value_and_color[1]);\n\tfree(value_and_color);\n\treturn (1);\n}\n"})})]})}function u(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(s,{...e})}):s(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>l,x:()=>o});var a=n(6540);const i={},r=a.createContext(i);function l(e){const t=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),a.createElement(r.Provider,{value:t},e.children)}}}]);