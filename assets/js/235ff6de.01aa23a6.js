"use strict";(self.webpackChunkwiki_42_mwx=self.webpackChunkwiki_42_mwx||[]).push([[1626],{1469:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>t,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>d,toc:()=>c});var s=n(4848),r=n(8453);const o={sidebar_position:4},i="\ud83d\udcc2 assign_index.c",d={id:"rank 02/PushSwap/asssign_index",title:"\ud83d\udcc2 assign_index.c",description:"\ud83e\udde0 Objetivo do Arquivo",source:"@site/docs/rank 02/PushSwap/asssign_index.mdx",sourceDirName:"rank 02/PushSwap",slug:"/rank 02/PushSwap/asssign_index",permalink:"/wiki_ft/docs/rank 02/PushSwap/asssign_index",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rank 02/PushSwap/asssign_index.mdx",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Verificacao de argumentos \ud83e\udde0",permalink:"/wiki_ft/docs/rank 02/PushSwap/verify_arguments"},next:{title:"\ud83d\udce6 radix_sort.c",permalink:"/wiki_ft/docs/rank 02/PushSwap/radix_sort"}},t={},c=[{value:"\ud83d\udd22 Etapas do C\xf3digo",id:"-etapas-do-c\xf3digo",level:2},{value:"1. Copiando os valores da pilha para um array",id:"1-copiando-os-valores-da-pilha-para-um-array",level:3},{value:"2. Ordenando o array (Bubble Sort)",id:"2-ordenando-o-array-bubble-sort",level:3},{value:"3. Atribuindo \xedndices aos n\xf3s da pilha",id:"3-atribuindo-\xedndices-aos-n\xf3s-da-pilha",level:3},{value:"\ud83e\uddfc Resumo final",id:"-resumo-final",level:3}];function l(e){const a={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(a.header,{children:(0,s.jsx)(a.h1,{id:"-assign_indexc",children:"\ud83d\udcc2 assign_index.c"})}),"\n",(0,s.jsx)(a.p,{children:"\ud83e\udde0 Objetivo do Arquivo"}),"\n",(0,s.jsx)(a.p,{children:"O papel desse arquivo \xe9 atribuir um \xedndice ordenado a cada elemento da pilha. Esses \xedndices representam a posi\xe7\xe3o relativa de cada n\xfamero se os elementos fossem ordenados.\nEssa transforma\xe7\xe3o \xe9 crucial para aplicar o Radix Sort, pois o algoritmo trabalha melhor com valores sequenciais e pequenos (como \xedndices), ao inv\xe9s de n\xfameros inteiros arbitr\xe1rios."}),"\n",(0,s.jsx)(a.h2,{id:"-etapas-do-c\xf3digo",children:"\ud83d\udd22 Etapas do C\xf3digo"}),"\n",(0,s.jsx)(a.h3,{id:"1-copiando-os-valores-da-pilha-para-um-array",children:"1. Copiando os valores da pilha para um array"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-C",children:"static int\t*copy_stack_to_array(t_node *stack, int size)\n"})}),"\n",(0,s.jsx)(a.p,{children:"Essa fun\xe7\xe3o percorre a pilha (t_node *stack) e cria um array simples com os valores.\nIsso \xe9 necess\xe1rio porque \xe9 muito mais f\xe1cil ordenar um array do que uma lista encadeada."}),"\n",(0,s.jsx)(a.h3,{id:"2-ordenando-o-array-bubble-sort",children:"2. Ordenando o array (Bubble Sort)"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-C",children:"static void\tsort_array(int *arr, int size)\n"})}),"\n",(0,s.jsx)(a.p,{children:"Aqui o array \xe9 ordenado usando o algoritmo Bubble Sort.\nApesar de n\xe3o ser o algoritmo mais eficiente, ele \xe9 suficiente para uma pequena quantidade de elementos (como \xe9 o caso do push_swap)."}),"\n",(0,s.jsx)(a.h3,{id:"3-atribuindo-\xedndices-aos-n\xf3s-da-pilha",children:"3. Atribuindo \xedndices aos n\xf3s da pilha"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-C",children:"void\tassign_indexes(t_node *stack)\n"})}),"\n",(0,s.jsx)(a.p,{children:"Primeiro, a pilha \xe9 copiada para o array e ordenada."}),"\n",(0,s.jsx)(a.p,{children:"Depois, para cada elemento da pilha, o c\xf3digo procura seu valor no array ordenado."}),"\n",(0,s.jsx)(a.p,{children:"Quando encontra, atribui o \xedndice correspondente ao campo stack->index."}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-markdown",children:"Exemplo:\n\nValores originais: 12 3 20\nArray ordenado:    3 12 20\n\xcdndices atribu\xeddos: 1 0 2\n"})}),"\n",(0,s.jsx)(a.p,{children:"Isso significa que o valor 12 recebe \xedndice 1, pois ele \xe9 o segundo menor n\xfamero da lista.\n\u2705 Vantagens dessa abordagem"}),"\n",(0,s.jsx)(a.p,{children:"Radix Sort n\xe3o depende dos valores reais, apenas da representa\xe7\xe3o bin\xe1ria dos \xedndices."}),"\n",(0,s.jsx)(a.p,{children:"Como todos os \xedndices s\xe3o garantidamente distintos, entre 0 e N-1, o algoritmo pode rodar sem colis\xf5es."}),"\n",(0,s.jsx)(a.p,{children:"O uso de \xedndices tamb\xe9m evita problemas com valores negativos."}),"\n",(0,s.jsx)(a.h3,{id:"-resumo-final",children:"\ud83e\uddfc Resumo final"}),"\n",(0,s.jsx)(a.p,{children:"Fun\xe7\xe3o\tDescri\xe7\xe3o"}),"\n",(0,s.jsxs)(a.ul,{children:["\n",(0,s.jsx)(a.li,{children:"copy_stack_to_array\tCopia os valores da pilha para um array."}),"\n",(0,s.jsx)(a.li,{children:"sort_array\tOrdena esse array para descobrir a ordem crescente."}),"\n",(0,s.jsx)(a.li,{children:"assign_indexes\tAtribui a cada n\xf3 da pilha seu \xedndice no array ordenado."}),"\n"]})]})}function p(e={}){const{wrapper:a}={...(0,r.R)(),...e.components};return a?(0,s.jsx)(a,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,a,n)=>{n.d(a,{R:()=>i,x:()=>d});var s=n(6540);const r={},o=s.createContext(r);function i(e){const a=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function d(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(o.Provider,{value:a},e.children)}}}]);