"use strict";(self.webpackChunkwiki_42_mwx=self.webpackChunkwiki_42_mwx||[]).push([[6],{7852:(e,a,r)=>{r.r(a),r.d(a,{assets:()=>d,contentTitle:()=>i,default:()=>p,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var t=r(4848),n=r(8453);const s={sidebar_position:2},i="Trace_Lines",o={id:"rank 02/FdF/guia_fdf_pronta/src/graph/draw_trace_lines",title:"Trace_Lines",description:"Arquivos utilitarios da brasenham",source:"@site/docs/rank 02/FdF/guia_fdf_pronta/src/graph/draw_trace_lines.mdx",sourceDirName:"rank 02/FdF/guia_fdf_pronta/src/graph",slug:"/rank 02/FdF/guia_fdf_pronta/src/graph/draw_trace_lines",permalink:"/wiki_ft/docs/rank 02/FdF/guia_fdf_pronta/src/graph/draw_trace_lines",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rank 02/FdF/guia_fdf_pronta/src/graph/draw_trace_lines.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Draw",permalink:"/wiki_ft/docs/rank 02/FdF/guia_fdf_pronta/src/graph/draw"},next:{title:"Isometric",permalink:"/wiki_ft/docs/rank 02/FdF/guia_fdf_pronta/src/graph/isometric"}},d={},c=[{value:"Trace_lines",id:"trace_lines-1",level:3},{value:"Set_pixel",id:"set_pixel",level:3}];function l(e){const a={code:"code",h1:"h1",h3:"h3",header:"header",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(a.header,{children:(0,t.jsx)(a.h1,{id:"trace_lines",children:"Trace_Lines"})}),"\n",(0,t.jsx)(a.p,{children:"Arquivos utilitarios da brasenham"}),"\n",(0,t.jsx)(a.h3,{id:"trace_lines-1",children:"Trace_lines"}),"\n",(0,t.jsx)(a.p,{children:'Desenha uma linha entre dois pontos no espa\xe7o 2D, calcula passos necessarios para "trilhar" a linha'}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-c",children:"void\ttrace_lines(float *x_step, float *y_step,\r\n\t\tt_coords *coords, t_fdf_gen *gen_data)\r\n{\r\n\tint\t\tmax;\r\n\r\n\tmax = 0;\r\n// calcula passos em x e y\r\n\t*x_step = coords->x1 - coords->x;\r\n\t*y_step = coords->y1 - coords->y;\r\n// Calcula o maior valor entre os passos em X e Y\r\n\tmax = max_func(mod(*x_step), mod(*y_step));\r\n// Normaliza o passo em X e Y para que haja algum tipo de constancia na magnetude\r\n\t*x_step /= max;\r\n\t*y_step /= max;\r\n\twhile ((int)(coords->x - coords->x1) || (int)(coords->y - coords->y1))\r\n\t{\r\n\t\tset_pixel(coords, gen_data); // Define o pixel atual\r\n\t\tcoords->x += *x_step; // Atualiza a coordenada X\r\n\t\tcoords->y += *y_step; // Atualiza a coordenada Y\r\n\t}\r\n}\n"})}),"\n",(0,t.jsx)(a.h3,{id:"set_pixel",children:"Set_pixel"}),"\n",(0,t.jsx)(a.p,{children:"Define a cor de um pixel especifico na imagem que esta sendo gerada"}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-c",metastring:"set_pixel",children:"static void\tset_pixel(t_coords *coords, t_fdf_gen *gen_data)\r\n{\r\n\tint\tindex;\r\n\r\n\tindex = 0;\r\n// Verifica se as coordenadas (coords->x, coords->y) est\xe3o dentro dos limites da janela\r\n\tif (coords->x >= 0 && coords->x < gen_data->data->win_width\r\n\t\t&& coords->y >= 0 && coords->y < gen_data->data->win_height)\r\n\t{\r\n// Calcula o \xedndice do pixel na mem\xf3ria da imagem (nao da para simplesmente pintar ali.. tem que achar na memoria da imagem)\r\n\t\tindex = ((int)coords->y * gen_data->img_data->size_line\r\n\t\t\t\t+ (int)coords->x * (gen_data->img_data->bpp / 8));\r\n// Define a cor do pixel no \xedndice calculado\r\n\t\t*(int *)(gen_data->img_data->img_data + index) = coords->start_color;\r\n\t}\r\n}\n"})})]})}function p(e={}){const{wrapper:a}={...(0,n.R)(),...e.components};return a?(0,t.jsx)(a,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},8453:(e,a,r)=>{r.d(a,{R:()=>i,x:()=>o});var t=r(6540);const n={},s=t.createContext(n);function i(e){const a=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function o(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),t.createElement(s.Provider,{value:a},e.children)}}}]);